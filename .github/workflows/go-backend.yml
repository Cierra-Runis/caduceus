name: Go Backend CI/CD

on:
  push:
    branches: [main, dev]
    paths:
      - 'server/**'
      - '.github/workflows/go-backend.yml'
  pull_request:
    branches: [main, dev]
    paths:
      - 'server/**'
      - '.github/workflows/go-backend.yml'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Run go fmt check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Run tests
        run: go test -race -vet=off -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./server/coverage.out
          slug: Cierra-Runis/caduceus
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Build for Linux
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-linux-amd64 .

      - name: Build for Windows
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-windows-amd64.exe .

      - name: Build for macOS
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-darwin-amd64 .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-binaries
          path: server/bin/
