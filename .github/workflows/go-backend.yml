name: Go Backend CI/CD

on:
  push:
    branches: [main, dev]
    paths:
      - 'server/**'
      - '.github/workflows/go-backend.yml'
  pull_request:
    branches: [main, dev]
    paths:
      - 'server/**'
      - '.github/workflows/go-backend.yml'

jobs:
  backend-quality:
    name: Backend Quality & Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Run go fmt check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Run unit tests with coverage
        run: go test -race -vet=off -short -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          flags: unit_tests
          files: coverage.out
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: backend-quality

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Install dependencies
        working-directory: ./server
        run: go mod download

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 60s bash -c 'until nc -z localhost 27017; do sleep 1; done'
          echo "MongoDB is ready!"

      - name: Run integration tests
        working-directory: ./server
        env:
          MONGODB_URI: mongodb://localhost:27017/
          TEST_DB_NAME: test_caduceus
        run: |
          echo "Running integration tests..."
          go test -v -tags=integration ./...

  build:
    name: Build
    needs: [backend-quality, integration-tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Build for Linux
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-linux-amd64 .

      - name: Build for Windows
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-windows-amd64.exe .

      - name: Build for macOS
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-w -s" -o bin/server-darwin-amd64 .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-binaries
          path: server/bin/
